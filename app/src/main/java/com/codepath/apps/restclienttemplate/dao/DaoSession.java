package com.codepath.apps.restclienttemplate.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.codepath.apps.restclienttemplate.dao.Twitter;
import com.codepath.apps.restclienttemplate.dao.User;
import com.codepath.apps.restclienttemplate.dao.CurrentUser;
import com.codepath.apps.restclienttemplate.dao.Media;

import com.codepath.apps.restclienttemplate.dao.TwitterDao;
import com.codepath.apps.restclienttemplate.dao.UserDao;
import com.codepath.apps.restclienttemplate.dao.CurrentUserDao;
import com.codepath.apps.restclienttemplate.dao.MediaDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig twitterDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig currentUserDaoConfig;
    private final DaoConfig mediaDaoConfig;

    private final TwitterDao twitterDao;
    private final UserDao userDao;
    private final CurrentUserDao currentUserDao;
    private final MediaDao mediaDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        twitterDaoConfig = daoConfigMap.get(TwitterDao.class).clone();
        twitterDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        currentUserDaoConfig = daoConfigMap.get(CurrentUserDao.class).clone();
        currentUserDaoConfig.initIdentityScope(type);

        mediaDaoConfig = daoConfigMap.get(MediaDao.class).clone();
        mediaDaoConfig.initIdentityScope(type);

        twitterDao = new TwitterDao(twitterDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        currentUserDao = new CurrentUserDao(currentUserDaoConfig, this);
        mediaDao = new MediaDao(mediaDaoConfig, this);

        registerDao(Twitter.class, twitterDao);
        registerDao(User.class, userDao);
        registerDao(CurrentUser.class, currentUserDao);
        registerDao(Media.class, mediaDao);
    }
    
    public void clear() {
        twitterDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
        currentUserDaoConfig.getIdentityScope().clear();
        mediaDaoConfig.getIdentityScope().clear();
    }

    public TwitterDao getTwitterDao() {
        return twitterDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public CurrentUserDao getCurrentUserDao() {
        return currentUserDao;
    }

    public MediaDao getMediaDao() {
        return mediaDao;
    }

}
